{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/complaint/complaint.component.css","webpack:///./src/app/complaint/complaint.component.html","webpack:///./src/app/complaint/complaint.component.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/inventory/inventory.component.css","webpack:///./src/app/inventory/inventory.component.html","webpack:///./src/app/inventory/inventory.component.ts","webpack:///./src/app/item/item.component.css","webpack:///./src/app/item/item.component.html","webpack:///./src/app/item/item.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/registration/registration.component.css","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/app/storefront-registration/storefront-registration.component.css","webpack:///./src/app/storefront-registration/storefront-registration.component.html","webpack:///./src/app/storefront-registration/storefront-registration.component.ts","webpack:///./src/app/storefront/storefront.component.css","webpack:///./src/app/storefront/storefront.component.html","webpack:///./src/app/storefront/storefront.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { ItemComponent } from './item/item.component';\r\nimport { RegistrationComponent} from './registration/registration.component';\r\nimport { ComplaintComponent } from './complaint/complaint.component';\r\nimport { StorefrontComponent } from './storefront/storefront.component';\r\nimport { StorefrontRegistrationComponent } from './storefront-registration/storefront-registration.component';\r\nimport { InventoryComponent} from './inventory/inventory.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'user',\r\n    component: UserComponent\r\n  },\r\n  {\r\n    path: 'item',\r\n    component: ItemComponent\r\n  },\r\n  {\r\n    path: 'inventory/:ITEMID',\r\n    component: InventoryComponent\r\n  },\r\n  {\r\n    path: 'registration',\r\n    component: RegistrationComponent\r\n  },\r\n  {\r\n    path: 'complaint',\r\n    component: ComplaintComponent\r\n  },\r\n  {\r\n    path: 'storefront',\r\n    component: StorefrontComponent\r\n  },\r\n  {\r\n    path: 'storefront-registration',\r\n    component: StorefrontRegistrationComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [RouterModule],\r\n  declarations: []\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    {{ title }}!\\r\\n  </h1>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Buying & Selling Platform';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ItemComponent } from './item/item.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { ComplaintComponent } from './complaint/complaint.component';\r\nimport { StorefrontComponent } from './storefront/storefront.component';\r\nimport { StorefrontRegistrationComponent } from './storefront-registration/storefront-registration.component';\nimport { InventoryComponent } from './inventory/inventory.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ItemComponent,\r\n    UserComponent,\r\n    LoginComponent,\r\n    RegistrationComponent,\r\n    ComplaintComponent,\r\n    StorefrontComponent,\r\n    StorefrontRegistrationComponent,\r\n    InventoryComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgbModule.forRoot()\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<p>\\n  complaint works!\\n</p>\\n\\n<form action=\\\"fileComplaint\\\">\\n  <textarea name=\\\"description\\\" id=\\\"complaintDescription\\\" cols=\\\"30\\\" rows=\\\"10\\\"></textarea>\\n  <button (click)=\\\"onSubmit()\\\">Submit</button>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-complaint',\n  templateUrl: './complaint.component.html',\n  styleUrls: ['./complaint.component.css']\n})\nexport class ComplaintComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  onSubmit() {\n    this.router.navigate(['user']);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n\n  getAccounts() {\n    return this.http.get('http://localhost:3000/ACCOUNTS');\n  }\n\n  getInventory() {\n    return this.http.get('http://localhost:3000/ITEMS');\n  }\n}\n","module.exports = \"\"","module.exports = \"<ul>\\n  <li *ngFor=\\\"let item of inventory$\\\">\\n    <a routerLink = \\\"/inventory/{{ITEMS.ITEMID}}\\\">{{ITEMS.NAME}}</a>\\n    <ul>\\n      <li>{{ ITEMS.DESCRIPTION }}</li>\\n      <li>{{ ITEMS.PRICE }}</li>\\n      <li>{{ ITEMS.QUANTITY }}</li>\\n    </ul>\\n  </li>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.css']\n})\nexport class InventoryComponent implements OnInit {\n\n  inventory$: Object;\n\n  constructor(private data: DataService) { }\n\n  ngOnInit() {\n    this.data.getInventory().subscribe(\n      data => this.inventory$ = data\n    );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div _ngcontent-c2>\\r\\n\\r\\n  <h1>Item Name</h1>\\r\\n\\r\\n  <div id=\\\"img\\\">\\r\\n    <img src=\\\"assets/img/cat.jpg\\\" alt=\\\"could not display\\\">\\r\\n  </div>\\r\\n\\r\\n  <label for=\\\"price\\\">Price</label>\\r\\n  <p>$ price goes here</p>\\r\\n\\r\\n  <label for=\\\"soldBy\\\">Sold by: </label>\\r\\n  <p id=\\\"seller\\\">seller here</p>\\r\\n\\r\\n  <label for=\\\"descriptionLabel\\\">Description:</label>\\r\\n  <p id=\\\"description\\\">some long description should go here and just because I want to test the formatting of entires with a lot \\r\\n    of words and letters I am going to make a ridiculously long, run-on sentence that simply never ends because, well, why not?\\r\\n  </p>\\r\\n\\r\\n  <label for=\\\"postDate\\\">Date Posted:</label>\\r\\n  <p>date posted goes here</p>\\r\\n\\r\\n  <label for=\\\"lastedUpdate\\\">Update Last: </label>\\r\\n  <p>last updated goes here</p>\\r\\n\\r\\n  <h2>Click button to purchase item</h2>\\r\\n  <button class=\\\"btn btn-primary btn-center\\\" (click)=\\\"onClick()\\\">Purchase</button>\\r\\n  {{clickMessage}}\\r\\n\\r\\n\\r\\n  <div><button class=\\\"btn btn-primary btn-center\\\" (click)=\\\"onBack()\\\">Back to Shop</button></div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-item',\r\n  templateUrl: './item.component.html',\r\n  styleUrls: ['./item.component.css']\r\n})\r\nexport class ItemComponent implements OnInit {\r\n\r\n  constructor(private router: Router, private http: HttpClient) { }\r\n\r\n  clickMessage = '';\r\n\r\n  onClick() {\r\n    this.clickMessage = 'You Have Purchased the Item!';\r\n    // logic for inserting transactions into DB goes here\r\n  }\r\n\r\n  onBack() {\r\n    this.router.navigate(['user']);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<form action=\\\"login\\\">\\r\\n  <div>\\r\\n    <label for=\\\"inputUsername\\\">Username:</label>\\r\\n    <input type=\\\"text\\\" id=\\\"username\\\">\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    <label for=\\\"inputPassword\\\">Password:</label>\\r\\n    <input type=\\\"text\\\" id=\\\"password\\\">\\r\\n  </div>\\r\\n\\r\\n  <div><button (click)=\\\"onLogin()\\\">Login</button></div>\\r\\n  <div><button (click)=\\\"onSignUp()\\\">Sign Up</button></div>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DataService } from '../data.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  users$: Object;\r\n\r\n  constructor(private router: Router, private data: DataService) { }\r\n\r\n  verifyLoginInfo() {\r\n    // submit username/pass from form and get whether it's in db in response\r\n  }\r\n\r\n  public onLogin() {\r\n    this.router.navigate(['user']);\r\n    // for (const index in this.users$) {\r\n    //   if (!this.users$.hasOwnProperty(index)) { continue; }\r\n\r\n    //   const obj = this.users$[index];\r\n    //   for (const prop in obj) {\r\n    //     if (!obj.hasOwnProperty) { continue; }\r\n\r\n    //     console.log(prop + ' = ' + obj[prop]);\r\n    //   }\r\n    // }\r\n  }\r\n\r\n  onSignUp() {\r\n    this.router.navigate(['registration']);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.data.getAccounts().subscribe(data => this.users$ = data);\r\n\r\n    for (const index in this.users$) {\r\n      if (!this.users$.hasOwnProperty(index)) { continue; }\r\n\r\n      const obj = this.users$[index];\r\n      for (const prop in obj) {\r\n        if (!obj.hasOwnProperty) { continue; }\r\n\r\n        console.log(prop + ' = ' + obj[prop]);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<form action=\\\"login\\\">\\n    <div>\\n      <label for=\\\"inputFirstName\\\">First Name</label>\\n      <input type=\\\"text\\\" id=\\\"firstName\\\">\\n    </div>\\n  \\n    <div>\\n      <label for=\\\"inputLastName\\\">Last Name</label>\\n      <input type=\\\"text\\\" id=\\\"lastName\\\">\\n    </div>\\n  \\n    <div>\\n      <label for=\\\"inputUsername\\\">Username</label>\\n      <input type=\\\"text\\\" id=\\\"username\\\">\\n    </div>\\n  \\n    <div>\\n      <label for=\\\"inputPassword\\\">Password</label>\\n      <input type=\\\"text\\\" id=\\\"password\\\">\\n    </div>\\n  \\n    <div>\\n      <label for=\\\"inputStreet\\\">Street Address</label>\\n      <input type=\\\"text\\\" id=\\\"street\\\">\\n    </div>\\n  \\n    <div>\\n      <label for=\\\"inputCity\\\">City</label>\\n      <input type=\\\"text\\\" id=\\\"city\\\">\\n    </div>\\n  \\n    <div>\\n      <label for=\\\"inputState\\\">State</label>\\n      <input type=\\\"text\\\" id=\\\"state\\\">\\n    </div>\\n  \\n    <div>\\n      <label for=\\\"inputZip\\\">Zip Code</label>\\n      <input type=\\\"text\\\" id=\\\"zip\\\">\\n    </div>\\n  \\n    <div>\\n      <label for=\\\"inputEmail\\\">E-Mail</label>\\n      <input type=\\\"text\\\" id=\\\"email\\\">\\n    </div>\\n  \\n    <div><button (click)=\\\"onSubmit()\\\">Submit</button></div>\\n  </form>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor() { }\n\n  onSubmit() {\n    console.log('Registration submitted');\n    // TODO insert infor into Accounts and users tables\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>Please enter shipping information for your new storefront</p>\\r\\n\\r\\n<form action=\\\"createStore\\\">\\r\\n  <div>\\r\\n    <label for=\\\"storeName\\\">Storefront Name:</label>\\r\\n    <input type=\\\"text\\\" id=\\\"storeName\\\">\\r\\n  </div>\\r\\n  \\r\\n  <div>\\r\\n    <label for=\\\"storeStreet\\\">Street Address:</label>\\r\\n    <input type=\\\"text\\\" id=\\\"storeStreet\\\">\\r\\n  </div>\\r\\n\\r\\n  <div>\\r\\n    <label for=\\\"storeCity\\\">City:</label>\\r\\n    <input type=\\\"text\\\" id=\\\"storeCity\\\">\\r\\n  </div>\\r\\n  \\r\\n  <div>\\r\\n    <label for=\\\"storeState\\\">State:</label>\\r\\n    <input type=\\\"text\\\" id=\\\"storeState\\\">\\r\\n  </div>\\r\\n  \\r\\n  <div>\\r\\n    <label for=\\\"storeZip\\\">Zip:</label>\\r\\n    <input type=\\\"text\\\" id=\\\"storeZip\\\">\\r\\n  </div>\\r\\n\\r\\n  <div><button (click)=\\\"onSubmit()\\\">Submit</button></div>\\r\\n  {{clickMessage}}\\r\\n\\r\\n  <div><button (click) = \\\"onGoUser()\\\">Return to User Page</button></div>\\r\\n\\r\\n  <div><button (click) = \\\"onGoStorefront()\\\">Go To Storefront</button></div>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-storefront-registration',\r\n  templateUrl: './storefront-registration.component.html',\r\n  styleUrls: ['./storefront-registration.component.css']\r\n})\r\nexport class StorefrontRegistrationComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  clickMessage = '';\r\n\r\n  onSubmit() {\r\n    this.clickMessage = 'Storefront Submitted!';\r\n    // Logic for inserting store object to db\r\n  }\r\n\r\n  onGoUser() {\r\n    this.router.navigate(['user']);\r\n  }\r\n\r\n  onGoStorefront() {\r\n    this.router.navigate(['storefront']);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2>Welcome to Storefront!</h2>\\n\\n<div>\\n  <button class=\\\"btn btn-primary btn-center\\\" (click)=\\\"onShowInventory()\\\">Show Inventory</button>\\n</div>\\n\\n<div>{{clickMessage}}</div>\\n\\n<button class=\\\"btn btn-primary btn-center\\\" (click)=\\\"onToAccount()\\\">Go To User Account</button>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-storefront',\n  templateUrl: './storefront.component.html',\n  styleUrls: ['./storefront.component.css']\n})\nexport class StorefrontComponent implements OnInit {\n\n  clickMessage = '';\n\n  constructor(private router: Router) { }\n\n  onShowInventory() {\n    this.clickMessage = 'Inventory currently not implemented, but the button works!';\n    // logic for inserting transactions into DB goes here\n  }\n\n  onToAccount() {\n    this.router.navigate(['user']);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p routerLink=\\\"item\\\"></p>\\r\\n\\r\\n<div><button (click)=\\\"onBrowseItem()\\\">Browse Item</button></div>\\r\\n<div><button (click)=\\\"onRegisterStorefront()\\\">Create a Storefront</button></div>\\r\\n<div><button (click)=\\\"onSubmitComplaint()\\\">Submit Complaint</button></div>\\r\\n<div><button (click)=\\\"onLogout()\\\">Logout</button></div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Route, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  onBrowseItem() {\r\n    this.router.navigate(['item']);\r\n  }\r\n\r\n  onSubmitComplaint() {\r\n    this.router.navigate(['complaint']);\r\n  }\r\n\r\n  onLogout() {\r\n    this.router.navigate(['']);\r\n  }\r\n\r\n  onRegisterStorefront() {\r\n    this.router.navigate(['storefront-registration']);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}